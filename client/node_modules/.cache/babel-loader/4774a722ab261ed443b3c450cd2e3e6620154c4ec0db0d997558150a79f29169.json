{"ast":null,"code":"var _jsxFileName = \"/Users/ryanhood/Desktop/Projects/AIBlogPoster/client/src/components/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { ThreeDots } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [companyValues, setCompanyValues] = useState(\"\");\n  const [jobListing, setJobListing] = useState(\"\");\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const coverLetterRef = useRef(null);\n  const handleGenerateCoverLetter = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: \"Create me a concise cover letter for the \" + position + \" at \" + company + \". The cover letter should be in the following format:\" + \"1. Salutation\" + \"2. Introduction and interest in the position and company\" + \"3. Summary of relevant skills and experiences: \" + skills + \"4. Explanation of how my values align with the company's values: \" + companyValues + \"5. Closing and contact information\" + \"Here is the job listing for reference: \" + jobListing + \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n      // \"https://cvl-generator-a8eca88952f3.herokuapp.com/completions\",  options );\n      // \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n      \"http://localhost:3001/completions\", options);\n      const data = await response.json();\n      // console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n  const handleGenerateNewCoverLetter = async () => {\n    setIsLoading(true);\n    try {\n      const options = {\n        // Define the 'options' variable here\n        method: \"POST\",\n        body: JSON.stringify({\n          message: \"Create me a concise cover letter for the \" + position + \" at \" + company + \". The cover letter should be in the following format:\" + \"1. Salutation\" + \"2. Introduction and interest in the position and company\" + \"3. Summary of relevant skills and experiences: \" + skills + \"4. Explanation of how my values align with the company's values: \" + companyValues + \"5. Closing and contact information\" + \"Here is the job listing for reference: \" + jobListing + \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await fetch(\"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\", options);\n      const data = await response.json();\n      console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n  const handleCopyCoverLetter = async () => {\n    if (coverLetterRef.current) {\n      const el = coverLetterRef.current;\n      try {\n        await navigator.clipboard.writeText(el.innerText);\n        // console.log('Text copied to clipboard');\n        alert(\"Cover Letter Copied to Clipboard!\");\n      } catch (error) {\n        console.error('Failed to copy text to clipboard:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen flex flex-col items-center justify-center pt-32 md:pt-56\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-xl w-[80%]\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center \",\n        children: \"\\u2B50 Cover Letter Generator \\u2B50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-6 text-lg font-light \",\n        children: \"powered by ChatGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-2\",\n          children: \"What is the position?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-large bg-gray-200 rounded-lg w-1/2 shadow-sm resize-y\",\n          type: \"text\",\n          value: position,\n          onChange: e => setPosition(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-2\",\n          children: \"Company Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-large bg-gray-200 rounded-lg shadow-sm w-1/2 resize-y\",\n          type: \"text\",\n          value: company,\n          onChange: e => setCompany(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-2\",\n          children: \"What are your  skills and/or past experiences relevant to this position?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-large bg-gray-200 rounded-lg shadow-sm resize-y h-24 w-3/4\",\n          type: \"text\",\n          value: skills,\n          onChange: e => setSkills(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-2\",\n          children: \"What are the company values?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-large bg-gray-200 rounded-lg w-3/4 shadow-sm resize-y h-24 \",\n          type: \"text\",\n          value: companyValues,\n          onChange: e => setCompanyValues(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium  mb-2\",\n          children: \"Copy and paste job listing here:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-large bg-gray-200 w-3/4 rounded-lg shadow-sm resize-y h-24 \",\n          value: jobListing,\n          onChange: e => setJobListing(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white hover:bg-blue-600 py-2 px-4 rounded-full font-medium text-center  w-3/4\",\n        onClick: handleGenerateCoverLetter,\n        children: \"Generate Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(ThreeDots, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: 80,\n          width: 80,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mt-6\",\n        children: \"Generated Cover Letter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full flex flex-col justify-center items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-4 mt-2 rounded-xl shadow-xl w-3/4 flex flex-col justify-center items-center relative\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full flex flex-col overflow-y-auto justify-center items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow p-8\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                ref: coverLetterRef,\n                children: coverLetter.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute bottom-2 right-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-green-500 text-white hover:bg-green-600 py-2 px-6  rounded-full font-medium\",\n                onClick: handleCopyCoverLetter,\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute bottom-2 left-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-green-500 text-white hover:bg-green-600 py-2 px-6 rounded-full font-medium\",\n                onClick: handleGenerateNewCoverLetter,\n                children: \"Generate New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400  pt-8 text-center\",\n        children: [\"Please note that there a rough 750 word character limit on the full response of this form (the total of all fields).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), \"Response time is based off of 's ChatGPT network speed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), \"* If the \\\"Generate Cover Letter\\\" button does not return a response, it is because your prompt is too long, or ChatGPT is too busy to perform a request at this time.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 1\n  }, this);\n}\n_s(MainPage, \"3sE2rhgpSufL9YuGnpG+ZlhKu2U=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useState","useRef","ThreeDots","jsxDEV","_jsxDEV","MainPage","_s","position","setPosition","company","setCompany","skills","setSkills","companyValues","setCompanyValues","jobListing","setJobListing","coverLetter","setCoverLetter","isLoading","setIsLoading","coverLetterRef","handleGenerateCoverLetter","options","method","body","JSON","stringify","message","headers","response","fetch","data","json","choices","error","console","handleGenerateNewCoverLetter","log","handleCopyCoverLetter","current","el","navigator","clipboard","writeText","innerText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","color","height","width","ref","content","_c","$RefreshReg$"],"sources":["/Users/ryanhood/Desktop/Projects/AIBlogPoster/client/src/components/MainPage.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { ThreeDots } from 'react-loader-spinner';\n\nfunction MainPage() {\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [companyValues, setCompanyValues] = useState(\"\");\n  const [jobListing, setJobListing] = useState(\"\");\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const coverLetterRef = useRef(null);\n\n  const handleGenerateCoverLetter = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message:\n           \"Create me a concise cover letter for the \" +\n            position +\n            \" at \" +\n            company +\n            \". The cover letter should be in the following format:\" +\n            \"1. Salutation\" +\n            \"2. Introduction and interest in the position and company\" +\n            \"3. Summary of relevant skills and experiences: \" +\n            skills +\n            \"4. Explanation of how my values align with the company's values: \" +\n            companyValues +\n            \"5. Closing and contact information\" +\n            \"Here is the job listing for reference: \" +\n            jobListing +\n            \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\",\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\n        // \"https://cvl-generator-a8eca88952f3.herokuapp.com/completions\",  options );\n        // \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n        \"http://localhost:3001/completions\",  options );\n\n        const data = await response.json();\n      // console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n\n  const handleGenerateNewCoverLetter = async () => {\n    setIsLoading(true);\n\n    try {\n      const options = { // Define the 'options' variable here\n        method: \"POST\",\n        body: JSON.stringify({\n          message:\n           \"Create me a concise cover letter for the \" +\n            position +\n            \" at \" +\n            company +\n            \". The cover letter should be in the following format:\" +\n            \"1. Salutation\" +\n            \"2. Introduction and interest in the position and company\" +\n            \"3. Summary of relevant skills and experiences: \" +\n            skills +\n            \"4. Explanation of how my values align with the company's values: \" +\n            companyValues +\n            \"5. Closing and contact information\" +\n            \"Here is the job listing for reference: \" +\n            jobListing +\n            \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\",\n          \n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n\n      const response = await fetch(\n        \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n      const data = await response.json();\n      console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n\n\n  const handleCopyCoverLetter = async () => {\n    if (coverLetterRef.current) {\n      const el = coverLetterRef.current;\n      try {\n        await navigator.clipboard.writeText(el.innerText);\n        // console.log('Text copied to clipboard');\n        alert(\"Cover Letter Copied to Clipboard!\")\n      } catch (error) {\n        console.error('Failed to copy text to clipboard:', error);\n      }\n    }\n  };\n  \n  \n  \n  \n\n  return (\n<div className=\"bg-gray-100 min-h-screen flex flex-col items-center justify-center pt-32 md:pt-56\">\n      <div className=\"bg-white p-8 rounded-xl shadow-xl w-[80%]\">\n        <h1 className=\"text-4xl font-bold text-center \">\n        ⭐ Cover Letter Generator ⭐ \n        </h1>\n        <h2 className=\"mb-6 text-lg font-light \">powered by ChatGPT</h2>\n       \n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">What is the position?</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg w-1/2 shadow-sm resize-y\"\n            type=\"text\"\n            value={position}\n            onChange={(e) => setPosition(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">Company Name:</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg shadow-sm w-1/2 resize-y\"\n            type=\"text\"\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n        </div> \n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">\n            What are your  skills and/or past experiences relevant to this position? \n          </label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg shadow-sm resize-y h-24 w-3/4\"\n            type=\"text\"\n            value={skills}\n            onChange={(e) => setSkills(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">What are the company values?</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg w-3/4 shadow-sm resize-y h-24 \"\n            type=\"text\"\n            value={companyValues}\n            onChange={(e) => setCompanyValues(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium  mb-2\">\n            Copy and paste job listing here:\n          </label>\n          <textarea\n            className=\"input-large bg-gray-200 w-3/4 rounded-lg shadow-sm resize-y h-24 \"\n            value={jobListing}\n            onChange={(e) => setJobListing(e.target.value)}\n          />\n        </div>\n        <button\n          className=\"bg-blue-500 text-white hover:bg-blue-600 py-2 px-4 rounded-full font-medium text-center  w-3/4\"\n          onClick={handleGenerateCoverLetter}\n        >\n          Generate Cover Letter\n        </button>\n        {isLoading && (\n          <div className=\"flex items-center mt-4\">\n            <ThreeDots\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n              className=\"mr-2\"\n            />\n            <p>Loading...</p>\n          </div>\n        )}\n   <h2 className=\"text-2xl font-semibold mt-6\">Generated Cover Letter:</h2>\n<div className=\"h-full flex flex-col justify-center items-center\">\n  <div className=\"border p-4 mt-2 rounded-xl shadow-xl w-3/4 flex flex-col justify-center items-center relative\">\n    <div className=\"h-full flex flex-col overflow-y-auto justify-center items-center\">\n      <div className=\"flex-grow p-8\">\n        <p ref={coverLetterRef}>{coverLetter.content}</p>\n      </div>\n      <div className=\"absolute bottom-2 right-2\">\n        <button\n          className=\"bg-green-500 text-white hover:bg-green-600 py-2 px-6  rounded-full font-medium\"\n          onClick={handleCopyCoverLetter}\n        >\n          Copy\n        </button>\n      </div>\n      <div className=\"absolute bottom-2 left-2\">\n        <button\n          className=\"bg-green-500 text-white hover:bg-green-600 py-2 px-6 rounded-full font-medium\"\n          onClick={handleGenerateNewCoverLetter}\n        >\n          Generate New\n        </button>\n      </div>\n    </div>\n  </div>\n\n    \n \n</div>\n\n<p className=\"text-red-400  pt-8 text-center\">Please note that there a rough 750 word character limit on the full response of this form (the total of all fields). \n          <br></br>\n          Response time is based off of 's ChatGPT network speed. \n          <br></br>\n          * If the \"Generate Cover Letter\" button does not return a response, it is because your prompt is too long, or ChatGPT is too busy to perform a request at this time.\n           </p>\n        </div>\n    </div>\n  );\n}\n  \n  \n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}