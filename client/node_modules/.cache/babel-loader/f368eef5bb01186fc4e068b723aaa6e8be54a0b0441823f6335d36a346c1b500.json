{"ast":null,"code":"import{useState,useRef}from\"react\";import{ThreeDots}from'react-loader-spinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MainPage(){const[position,setPosition]=useState(\"\");const[company,setCompany]=useState(\"\");const[skills,setSkills]=useState(\"\");const[companyValues,setCompanyValues]=useState(\"\");const[jobListing,setJobListing]=useState(\"\");const[coverLetter,setCoverLetter]=useState(\"\");const[isLoading,setIsLoading]=useState(false);const coverLetterRef=useRef(null);const handleGenerateCoverLetter=async()=>{const options={method:\"POST\",body:JSON.stringify({message:\"Create me a concise cover letter for the \"+position+\" at \"+company+\". The cover letter should be in the following format:\"+\"1. Salutation\"+\"2. Introduction and interest in the position and company\"+\"3. Summary of relevant skills and experiences: \"+skills+\"4. Explanation of how my values align with the company's values: \"+companyValues+\"5. Closing and contact information\"+\"Here is the job listing for reference: \"+jobListing+\". Please keep the letter professional, engaging, and no more than a few paragraphs long.\"}),headers:{\"Content-Type\":\"application/json\"}};setIsLoading(true);try{const response=await fetch(// \"https://cvl-generator-a8eca88952f3.herokuapp.com/completions\",  options );\n// \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n\"http://localhost:3001/completions\",options);const data=await response.json();// console.log(data);\nsetCoverLetter(data.choices[0].message);setIsLoading(false);}catch(error){console.error(\"Failed to generate cover letter:\",error);setIsLoading(false);}};const handleGenerateNewCoverLetter=async()=>{setIsLoading(true);try{const options={// Define the 'options' variable here\nmethod:\"POST\",body:JSON.stringify({message:\"Create me a concise cover letter for the \"+position+\" at \"+company+\". The cover letter should be in the following format:\"+\"1. Salutation\"+\"2. Introduction and interest in the position and company\"+\"3. Summary of relevant skills and experiences: \"+skills+\"4. Explanation of how my values align with the company's values: \"+companyValues+\"5. Closing and contact information\"+\"Here is the job listing for reference: \"+jobListing+\". Please keep the letter professional, engaging, and no more than a few paragraphs long.\"}),headers:{\"Content-Type\":\"application/json\"}};const response=await fetch(\"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",options);const data=await response.json();console.log(data);setCoverLetter(data.choices[0].message);setIsLoading(false);}catch(error){console.error(\"Failed to generate cover letter:\",error);setIsLoading(false);}};const handleCopyCoverLetter=async()=>{if(coverLetterRef.current){const el=coverLetterRef.current;try{await navigator.clipboard.writeText(el.innerText);// console.log('Text copied to clipboard');\nalert(\"Cover Letter Copied to Clipboard!\");}catch(error){console.error('Failed to copy text to clipboard:',error);}}};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 min-h-screen flex flex-col items-center justify-center pt-32 md:pt-56\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-xl shadow-xl w-[80%]\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-center \",children:\"\\u2B50 Cover Letter Generator \\u2B50\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"mb-6 text-lg font-light \",children:\"powered by ChatGPT\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-2\",children:\"What is the position?\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-large bg-gray-200 rounded-lg w-1/2 shadow-sm resize-y\",type:\"text\",value:position,onChange:e=>setPosition(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-2\",children:\"Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-large bg-gray-200 rounded-lg shadow-sm w-1/2 resize-y\",type:\"text\",value:company,onChange:e=>setCompany(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-2\",children:\"What are your  skills and/or past experiences relevant to this position?\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-large bg-gray-200 rounded-lg shadow-sm resize-y h-24 w-3/4\",type:\"text\",value:skills,onChange:e=>setSkills(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-2\",children:\"What are the company values?\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-large bg-gray-200 rounded-lg w-3/4 shadow-sm resize-y h-24 \",type:\"text\",value:companyValues,onChange:e=>setCompanyValues(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium  mb-2\",children:\"Copy and paste job listing here:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"input-large bg-gray-200 w-3/4 rounded-lg shadow-sm resize-y h-24 \",value:jobListing,onChange:e=>setJobListing(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white hover:bg-blue-600 py-2 px-4 rounded-full font-medium text-center  w-3/4\",onClick:handleGenerateCoverLetter,children:\"Generate Cover Letter\"}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-4\",children:[/*#__PURE__*/_jsx(ThreeDots,{type:\"ThreeDots\",color:\"#00BFFF\",height:80,width:80,className:\"mr-2\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mt-6\",children:\"Generated Cover Letter:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-full flex flex-col justify-center items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"border p-4 mt-2 rounded-xl shadow-xl w-3/4 flex flex-col justify-center items-center relative\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-full flex flex-col overflow-y-auto justify-center items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow p-8\",children:/*#__PURE__*/_jsx(\"p\",{ref:coverLetterRef,children:coverLetter.content})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-2 right-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white hover:bg-green-600 py-2 px-6  rounded-full font-medium\",onClick:handleCopyCoverLetter,children:\"Copy\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-2 left-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white hover:bg-green-600 py-2 px-6 rounded-full font-medium\",onClick:handleGenerateNewCoverLetter,children:\"Generate New\"})})]})})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-red-400  pt-8 text-center\",children:[\"Please note that there a rough 750 word character limit on the full response of this form (the total of all fields).\",/*#__PURE__*/_jsx(\"br\",{}),\"Response time is based off of 's ChatGPT network speed.\",/*#__PURE__*/_jsx(\"br\",{}),\"* If the \\\"Generate Cover Letter\\\" button does not return a response, it is because your prompt is too long, or ChatGPT is too busy to perform a request at this time.\"]})]})});}export default MainPage;","map":{"version":3,"names":["useState","useRef","ThreeDots","jsx","_jsx","jsxs","_jsxs","MainPage","position","setPosition","company","setCompany","skills","setSkills","companyValues","setCompanyValues","jobListing","setJobListing","coverLetter","setCoverLetter","isLoading","setIsLoading","coverLetterRef","handleGenerateCoverLetter","options","method","body","JSON","stringify","message","headers","response","fetch","data","json","choices","error","console","handleGenerateNewCoverLetter","log","handleCopyCoverLetter","current","el","navigator","clipboard","writeText","innerText","alert","className","children","type","value","onChange","e","target","onClick","color","height","width","ref","content"],"sources":["/Users/ryanhood/Desktop/Projects/AIBlogPoster/client/src/components/MainPage.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { ThreeDots } from 'react-loader-spinner';\n\nfunction MainPage() {\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [companyValues, setCompanyValues] = useState(\"\");\n  const [jobListing, setJobListing] = useState(\"\");\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const coverLetterRef = useRef(null);\n\n  const handleGenerateCoverLetter = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message:\n           \"Create me a concise cover letter for the \" +\n            position +\n            \" at \" +\n            company +\n            \". The cover letter should be in the following format:\" +\n            \"1. Salutation\" +\n            \"2. Introduction and interest in the position and company\" +\n            \"3. Summary of relevant skills and experiences: \" +\n            skills +\n            \"4. Explanation of how my values align with the company's values: \" +\n            companyValues +\n            \"5. Closing and contact information\" +\n            \"Here is the job listing for reference: \" +\n            jobListing +\n            \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\",\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\n        // \"https://cvl-generator-a8eca88952f3.herokuapp.com/completions\",  options );\n        // \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n        \"http://localhost:3001/completions\",  options );\n\n        const data = await response.json();\n      // console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n\n  const handleGenerateNewCoverLetter = async () => {\n    setIsLoading(true);\n\n    try {\n      const options = { // Define the 'options' variable here\n        method: \"POST\",\n        body: JSON.stringify({\n          message:\n           \"Create me a concise cover letter for the \" +\n            position +\n            \" at \" +\n            company +\n            \". The cover letter should be in the following format:\" +\n            \"1. Salutation\" +\n            \"2. Introduction and interest in the position and company\" +\n            \"3. Summary of relevant skills and experiences: \" +\n            skills +\n            \"4. Explanation of how my values align with the company's values: \" +\n            companyValues +\n            \"5. Closing and contact information\" +\n            \"Here is the job listing for reference: \" +\n            jobListing +\n            \". Please keep the letter professional, engaging, and no more than a few paragraphs long.\",\n          \n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n\n      const response = await fetch(\n        \"https://cover-letter-akira-backend-b62c253075b0.herokuapp.com/completions\",  options );\n      const data = await response.json();\n      console.log(data);\n      setCoverLetter(data.choices[0].message);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to generate cover letter:\", error);\n      setIsLoading(false);\n    }\n  };\n\n\n  const handleCopyCoverLetter = async () => {\n    if (coverLetterRef.current) {\n      const el = coverLetterRef.current;\n      try {\n        await navigator.clipboard.writeText(el.innerText);\n        // console.log('Text copied to clipboard');\n        alert(\"Cover Letter Copied to Clipboard!\")\n      } catch (error) {\n        console.error('Failed to copy text to clipboard:', error);\n      }\n    }\n  };\n  \n  \n  \n  \n\n  return (\n<div className=\"bg-gray-100 min-h-screen flex flex-col items-center justify-center pt-32 md:pt-56\">\n      <div className=\"bg-white p-8 rounded-xl shadow-xl w-[80%]\">\n        <h1 className=\"text-4xl font-bold text-center \">\n        ⭐ Cover Letter Generator ⭐ \n        </h1>\n        <h2 className=\"mb-6 text-lg font-light \">powered by ChatGPT</h2>\n       \n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">What is the position?</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg w-1/2 shadow-sm resize-y\"\n            type=\"text\"\n            value={position}\n            onChange={(e) => setPosition(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">Company Name:</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg shadow-sm w-1/2 resize-y\"\n            type=\"text\"\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n          />\n        </div> \n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">\n            What are your  skills and/or past experiences relevant to this position? \n          </label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg shadow-sm resize-y h-24 w-3/4\"\n            type=\"text\"\n            value={skills}\n            onChange={(e) => setSkills(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium mb-2\">What are the company values?</label>\n          <input\n            className=\"input-large bg-gray-200 rounded-lg w-3/4 shadow-sm resize-y h-24 \"\n            type=\"text\"\n            value={companyValues}\n            onChange={(e) => setCompanyValues(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block font-medium  mb-2\">\n            Copy and paste job listing here:\n          </label>\n          <textarea\n            className=\"input-large bg-gray-200 w-3/4 rounded-lg shadow-sm resize-y h-24 \"\n            value={jobListing}\n            onChange={(e) => setJobListing(e.target.value)}\n          />\n        </div>\n        <button\n          className=\"bg-blue-500 text-white hover:bg-blue-600 py-2 px-4 rounded-full font-medium text-center  w-3/4\"\n          onClick={handleGenerateCoverLetter}\n        >\n          Generate Cover Letter\n        </button>\n        {isLoading && (\n          <div className=\"flex items-center mt-4\">\n            <ThreeDots\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n              className=\"mr-2\"\n            />\n            <p>Loading...</p>\n          </div>\n        )}\n   <h2 className=\"text-2xl font-semibold mt-6\">Generated Cover Letter:</h2>\n<div className=\"h-full flex flex-col justify-center items-center\">\n  <div className=\"border p-4 mt-2 rounded-xl shadow-xl w-3/4 flex flex-col justify-center items-center relative\">\n    <div className=\"h-full flex flex-col overflow-y-auto justify-center items-center\">\n      <div className=\"flex-grow p-8\">\n        <p ref={coverLetterRef}>{coverLetter.content}</p>\n      </div>\n      <div className=\"absolute bottom-2 right-2\">\n        <button\n          className=\"bg-green-500 text-white hover:bg-green-600 py-2 px-6  rounded-full font-medium\"\n          onClick={handleCopyCoverLetter}\n        >\n          Copy\n        </button>\n      </div>\n      <div className=\"absolute bottom-2 left-2\">\n        <button\n          className=\"bg-green-500 text-white hover:bg-green-600 py-2 px-6 rounded-full font-medium\"\n          onClick={handleGenerateNewCoverLetter}\n        >\n          Generate New\n        </button>\n      </div>\n    </div>\n  </div>\n\n    \n \n</div>\n\n<p className=\"text-red-400  pt-8 text-center\">Please note that there a rough 750 word character limit on the full response of this form (the total of all fields). \n          <br></br>\n          Response time is based off of 's ChatGPT network speed. \n          <br></br>\n          * If the \"Generate Cover Letter\" button does not return a response, it is because your prompt is too long, or ChatGPT is too busy to perform a request at this time.\n           </p>\n        </div>\n    </div>\n  );\n}\n  \n  \n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}